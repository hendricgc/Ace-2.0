/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.AtletaController;
import Controller.ComissaoController;
import Controller.EquipeController;
import Controller.MontarEquipeController;
import Model.Atleta;
import Model.Equipe;
import java.awt.event.MouseAdapter;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hendric
 */
public class MontarEquipes extends javax.swing.JPanel {

    /**
     * Creates new form MontarTimes
     */
    
    private final MontarEquipeController montarEquipeController;
    private final EquipeController equipeController;
    private final AtletaController atletaController;
    private final ComissaoController comissaoController;
    private LinkedList<Equipe> equipes = new LinkedList<>();
    private LinkedList<Atleta> atletasSemEquipe = new LinkedList<>();
    private LinkedList<Atleta> atletasInserir = new LinkedList<>();
    private final DefaultTableModel dtm; 
    private final DefaultTableModel dtmi;
    
    public MontarEquipes(MontarEquipeController mec, EquipeController ec, AtletaController ac, ComissaoController cc)
    {
        this.montarEquipeController = mec;
        this.atletaController = ac;
        this.equipeController = ec;
        this.comissaoController = cc;
        
        initComponents();
        botaoIncluir.setEnabled(false);
        botaoExcluir.setEnabled(false);
        botaoSalvar.setEnabled(false);
        dtm = (DefaultTableModel) tabelaInserir.getModel();
        dtmi = (DefaultTableModel) tabelaInserido.getModel();
        carregarEquipes();
        listarIntegrantesSemEquipe();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        caixaEquipe = new javax.swing.JComboBox<>();
        labelSelecionar = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaInserir = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaInserido = new javax.swing.JTable();
        labelInserir = new javax.swing.JLabel();
        labelInseridos = new javax.swing.JLabel();
        botaoIncluir = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();

        caixaEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaEquipeActionPerformed(evt);
            }
        });

        labelSelecionar.setText("Selecione uma equipe:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelSelecionar)
                .addContainerGap(1052, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(caixaEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelSelecionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caixaEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        tabelaInserir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Função"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabelaInserir);
        if (tabelaInserir.getColumnModel().getColumnCount() > 0) {
            tabelaInserir.getColumnModel().getColumn(0).setResizable(false);
            tabelaInserir.getColumnModel().getColumn(0).setPreferredWidth(190);
            tabelaInserir.getColumnModel().getColumn(1).setResizable(false);
        }

        tabelaInserido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Função"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabelaInserido);
        if (tabelaInserido.getColumnModel().getColumnCount() > 0) {
            tabelaInserido.getColumnModel().getColumn(0).setResizable(false);
            tabelaInserido.getColumnModel().getColumn(0).setPreferredWidth(190);
            tabelaInserido.getColumnModel().getColumn(1).setResizable(false);
        }

        labelInserir.setText("Integrantes a inserir");

        labelInseridos.setText("Integrantes inseridos");

        botaoIncluir.setText(">>");
        botaoIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIncluirActionPerformed(evt);
            }
        });

        botaoExcluir.setText("<<");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1101, 1101, 1101)
                        .addComponent(botaoSalvar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botaoIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(41, 41, 41)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(180, 180, 180)
                            .addComponent(labelInserir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelInseridos)
                            .addGap(180, 180, 180))))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelInserir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelInseridos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(botaoIncluir)
                        .addGap(18, 18, 18)
                        .addComponent(botaoExcluir))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))))
                .addGap(18, 18, 18)
                .addComponent(botaoSalvar)
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void carregarEquipes(){
        
        try {
            equipes = equipeController.listarTodasEquipes();
            caixaEquipe.addItem("Selecionar uma equipe");
            for(int i = 0; i < equipes.size(); i++)
                caixaEquipe.addItem(equipes.get(i).getNome());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    public void listarIntegrantesSemEquipe(){   
        dtm.setRowCount(0);
        try {
            atletasSemEquipe = equipeController.getAtletasSemEquipe();
            for(int i = 0; i < atletasSemEquipe.size(); i++){
                dtm.addRow(new Object[] {
                    atletasSemEquipe.get(i).getNome(),
                    atletasSemEquipe.get(i).getPosicao()
                });
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        tabelaInserido.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaInserir.getSelectionModel().clearSelection();
            }
        });
    }
    
    public void listarIntegrantesEquipe(Equipe e){
        dtmi.setRowCount(0);
        try {
            atletasInserir = equipeController.getAtletasEquipe(e);
            for(int i = 0; i < atletasInserir.size(); i++){
                dtmi.addRow(new Object[]{
                    atletasInserir.get(i).getNome(),
                    atletasInserir.get(i).getPosicao()
                });
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
            tabelaInserir.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaInserido.getSelectionModel().clearSelection();
            }
        });
    }
    
    private void botaoIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIncluirActionPerformed
        
        try {
            int numeroCamisa = Integer.parseInt(JOptionPane.showInputDialog(this, "Digite o número da camisa do jogador"));
            for(int i = 0; i < tabelaInserir.getRowCount(); i++){
                if(tabelaInserir.isRowSelected(i)){
                    dtmi.addRow((Vector) dtm.getDataVector().elementAt(i));
                    dtm.removeRow(i);
                    atletasSemEquipe.get(i).setNumeroCamisa(numeroCamisa);
                    atletasInserir.add(atletasSemEquipe.get(i));
                    atletasSemEquipe.remove(atletasSemEquipe.get(i));
                    try {
                        montarEquipeController.inserirAtletaEquipe(atletasInserir.get(i),
                                equipeController.procurarEquipeNome(caixaEquipe.getSelectedItem().toString()));
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            }               
            listarIntegrantesEquipe(equipeController.procurarEquipeNome(caixaEquipe.getSelectedItem().toString()));
            listarIntegrantesSemEquipe();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botaoIncluirActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        
        for(int i = 0; i < tabelaInserido.getRowCount(); i++){
            if(tabelaInserido.isRowSelected(i)){
                dtm.addRow((Vector) dtmi.getDataVector().elementAt(i));
                dtmi.removeRow(i);
                try {
                montarEquipeController.removerAtletaEquipe(atletasInserir.get(i));
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
                atletasSemEquipe.add(atletasInserir.get(i));
                atletasInserir.remove(atletasInserir.get(i));
            }               
        }
        try{
            listarIntegrantesEquipe(equipeController.procurarEquipeNome(caixaEquipe.getSelectedItem().toString()));
            listarIntegrantesSemEquipe();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void caixaEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaEquipeActionPerformed
        dtmi.setRowCount(0);
        if(!caixaEquipe.getSelectedItem().toString().equals("Selecionar uma equipe")){
            botaoIncluir.setEnabled(true);
            botaoExcluir.setEnabled(true);
            botaoSalvar.setEnabled(true);
            try {
                String nomeEquipe = caixaEquipe.getSelectedItem().toString();
                Equipe e = equipeController.procurarEquipeNome(nomeEquipe);
                listarIntegrantesEquipe(e);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        else{
            botaoIncluir.setEnabled(false);
            botaoExcluir.setEnabled(false);
            botaoSalvar.setEnabled(false);
        }
    }//GEN-LAST:event_caixaEquipeActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        JOptionPane.showMessageDialog(this, "Time montado com sucesso");
        this.removeAll();
        this.updateUI();
    }//GEN-LAST:event_botaoSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoIncluir;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JComboBox<String> caixaEquipe;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel labelInseridos;
    private javax.swing.JLabel labelInserir;
    private javax.swing.JLabel labelSelecionar;
    private javax.swing.JTable tabelaInserido;
    private javax.swing.JTable tabelaInserir;
    // End of variables declaration//GEN-END:variables
}
